;==========================================================
;
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;
;
;   To learn more about how to configure Polybar
;   go to https://github.com/polybar/polybar
;
;   The README contains a lot of information
;
;==========================================================

[colors]

background = ${xrdb:color0:#383C4A}
foreground = ${xrdb:color15:#fff}

;  _                    
; | |__   __ _ _ __ ___ 
; | '_ \ / _` | '__/ __|
; | |_) | (_| | |  \__ \
; |_.__/ \__,_|_|  |___/

[bar/bar]
enable-ipc=true
height = 32

background = ${colors.background}
;background = ${colors.primary}
foreground = ${colors.foreground}

padding=2
font-0=Jetbrains Mono:size=11;3
font-1=Symbols Nerd Font:size=12:antialias=true;3

dpi = 100

modules-left = ewmh
; Spotify (scripts at github.com/dietervanhoof/polybar-spotify-controls)
;modules-center = previous playpause next spotify
; Mpd
modules-center = time 
modules-right = cpu pulseaudio

override-redirect = false

;                      _       _           
;  _ __ ___   ___   __| |_   _| | ___  ___ 
; | '_ ` _ \ / _ \ / _` | | | | |/ _ \/ __|
; | | | | | | (_) | (_| | |_| | |  __/\__ \
; |_| |_| |_|\___/ \__,_|\__,_|_|\___||___/
                                         
[module/xwindow]
type = internal/xwindow
label = %title:0:40:...%
label-color1 = ${colors.foreground} 
label-background = ${colors.background} 
label-padding = 2

[module/ewmh]
type = internal/xworkspaces

; Only show workspaces defined on the same output as the bar
;
; Useful if you want to show monitor specific workspaces
; on different bars
;
; Default: false
pin-workspaces = true

; Create click handler used to focus desktop
; Default: true
enable-click = false

; Create scroll handlers used to cycle desktops
; Default: true
enable-scroll = false
label-empty = " "
label-occupied = " "
label-active = " "
[module/cpu]
type = internal/cpu
interval = 2
format-prefix = " "
format-padding = 3
format-foreground = ${colors.foreground}
label = %percentage%%

[module/memory]
type = internal/memory
interval = 2
format-padding = 2
format-prefix = " "
format-foreground = ${colors.foreground}
label = %percentage_used%%

[module/wlan]
type = internal/network
interface = wlp0s20u1
interval = 3.0


format-connected =  <label-connected>
label-connected = %essid%
label-connected-color1 = ${colors.foreground}

;format-disconnected =
format-disconnected = <label-disconnected>
label-disconnected = %ifname% disconnected
label-disconnected-color1 = ${colors.foreground}

ramp-signal-0 = 
ramp-signal-1 = 
ramp-signal-2 = 
ramp-signal-3 = 
ramp-signal-4 = 
ramp-signal-color1 = ${colors.foreground}

[module/eth]
type = internal/network
interface = eno1
interval = 3.0

format-connected-prefix = " "
format-connected-prefix-color1 = ${colors.color1-alt}
label-connected = %local_ip%

format-disconnected =
;format-disconnected = <label-disconnected>
;format-disconnected-underline = ${self.format-connected-underline}
;label-disconnected = %ifname% disconnected
;label-disconnected-color1 = ${colors.color1-alt}

[module/time]
type = internal/date
interval = 10
format-padding = 3

time = "%H:%M"
date = "%A %d %b"

label = %date%, %time%
label-padding = 2


[module/pulseaudio]
type = internal/pulseaudio

format-volume = <ramp-volume><label-volume>
label-volume = %percentage:4:4%%
use-ui-max = false
interval = 5

ramp-volume-0 = ""
ramp-volume-1 = ""
ramp-volume-2 = ""

label-muted = "  muted"   
label-muted-background = ${colors.background}
label-muted-foreground = ${xrdb:color6:#fff}

[module/temperature]
type = internal/temperature
thermal-zone = 0
warn-temperature = 60

format =  <label>
format-warn = <ramp> <label-warn>

label = %temperature-c%
label-warn = %temperature-c%
label-warn-color1 = ${colors.secondary}

ramp-0 = 
ramp-1 = 
ramp-2 = 

[module/powermenu]
type = custom/menu

expand-right = true

format-spacing = 1
format-margin = 0
format-background = ${colors.background}
format-foreground = ${colors.foreground}
format-padding = 2

label-open = 
label-close = 
label-separator = |

; reboot
menu-0-1 = 
menu-0-1-exec = menu-open-2
; poweroff
menu-0-2 = 
menu-0-2-exec = menu-open-3
; logout
menu-0-0 = 
menu-0-0-exec = menu-open-1

menu-2-0 = 
menu-2-0-exec = reboot

menu-3-0 = 
menu-3-0-exec = poweroff

menu-1-0 = 
menu-1-0-exec = i3-msg exit || openbox --exit

;Spotify modules

[module/previous]
type = custom/script
format-font = 2
format-padding = 2
format-foreground = ${colors.foreground}
exec = echo ""
exec-if = "pgrep spotify"
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous"


[module/next]
type = custom/script
format-font = 2
format-padding = 2
format-foreground = ${colors.foreground}
exec = echo ""
exec-if = "pgrep spotify"
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next"

[module/playpause]
type = custom/ipc
format-font = 2
format-padding = 0
format-foreground = ${colors.foreground}
; Default
hook-0 = echo ""
; Playing
hook-1 = echo ""
; Paused
hook-2 = echo ""
initial = 2
click-left = "dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause"


[module/spotify]
type = custom/ipc
format-foreground = ${colors.foreground}
; Default
hook-0 = echo ""
; Playing/paused show song name and artist
hook-1 = python3 ~/.scripts/spotify/spotify_status.py
initial = 2
click-left = i3-msg '[class="Spotify"] focus'


[module/battery]
type = internal/battery
full-at = 100
time-format = %H:%M
battery = BAT0
adapter = ADP0
format-charging = <animation-charging> <label-charging>
;label-charging = %percentage%% (%time%)
label-charging = %percentage%%
format-discharging = <ramp-capacity> <label-discharging>
;label-discharging = %percentage%% (%time%)
label-discharging = %percentage%%
format-full = <label-full>
;label-charging-underline = ${colors.tertiary}
;label-discharging-underline = ${colors.tertiary}


format-charging-underline = ${colors.foreground}
format-discharging-underline = ${colors.foreground}
format-full-prefix = " "
ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 

ramp-capacity-0-foreground = ${colors.foreground}
ramp-capacity-foreground   = ${colors.foreground}
bar-capacity-width = 10

animation-charging-0 = ""
animation-charging-1 = ""
animation-charging-2 = ""
animation-charging-3 = ""
animation-charging-4 = ""

animation-charging-framerate = 750

label-font = 1

; ramp-capacity-0-underline = ${colors.tertiary}
; ramp-capacity-1-underline = ${colors.tertiary}
; ramp-capacity-2-underline = ${colors.tertiary}
; ramp-capacity-3-underline = ${colors.tertiary}
; ramp-capacity-4-underline = ${colors.tertiary}
;
; animation-charging-0-underline = ${colors.tertiary}
; animation-charging-1-underline = ${colors.tertiary}
; animation-charging-2-underline = ${colors.tertiary}
; animation-charging-3-underline = ${colors.tertiary}
; animation-charging-4-underline = ${colors.tertiary}

; Uncomment these for anmated discharging battery underline
; ramp-capacity-0-underline = ${colors.primary}
; ramp-capacity-1-underline = ${colors.primary}
; ramp-capacity-2-underline = ${colors.tertiary}
; ramp-capacity-3-underline = ${colors.tertiary}
; ramp-capacity-4-underline = ${colors.tertiary}


[settings]
screenchange-reload = true
;compositing-background = xor
;compositing-background = screen
;compositing-foreground = source
;compositing-border = over
;pseudo-transparency = true

[global/wm]
margin-top = 0
margin-bottom = 0

; vim:ft=dosini
                      
